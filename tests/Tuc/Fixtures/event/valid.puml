@startuml Valid cases

== Valid use case ==

actor "Generic Service" as GenericService <<Tests>>
participant "InteractionCollector" as InteractionCollector <<Tests>>
collections "InteractionStream" as InteractionStream <<Tests>>

activate GenericService

== InteractionEvent ==

GenericService -> InteractionCollector ++: Post(InteractionEvent)
    InteractionCollector ->> InteractionStream: InteractionEvent
InteractionCollector --> GenericService --: unit

== InteractionEvent.Confirmed ==

GenericService -> InteractionCollector ++: Post(InteractionEvent)
    InteractionCollector ->> InteractionStream: [[{InteractionEvent.Confirmed}Confirmed]]
InteractionCollector --> GenericService --: unit

== InteractionEvent.Other ==

GenericService -> InteractionCollector ++: Post(InteractionEvent)
    InteractionCollector ->> InteractionStream: [[{InteractionEvent.Other}Other]]
InteractionCollector --> GenericService --: unit

== InteractionEvent.Interaction ==

GenericService -> InteractionCollector ++: Post(InteractionEvent)
    InteractionCollector ->> InteractionStream: [[{InteractionEvent.Interaction}Interaction]]
InteractionCollector --> GenericService --: unit

== InteractionEvent.Rejected by user ==

GenericService -> InteractionCollector ++: Post(InteractionEvent)
    InteractionCollector ->> InteractionStream: [[{InteractionEvent.Rejected.UserRejected}UserRejected]]
InteractionCollector --> GenericService --: unit

== InteractionEvent.Rejected Foo ==

GenericService -> InteractionCollector ++: Post(InteractionEvent)
    InteractionCollector ->> InteractionStream: [[{InteractionEvent.Rejected.UserRejected.Foo}Foo]]
InteractionCollector --> GenericService --: unit

== InteractionEvent.Rejected - expired ==

GenericService -> InteractionCollector ++: Post(InteractionEvent)
    InteractionCollector ->> InteractionStream: [[{InteractionEvent.Rejected.Expired}Expired]]
InteractionCollector --> GenericService --: unit

deactivate GenericService

@enduml
